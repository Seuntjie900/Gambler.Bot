@using System.Collections.ObjectModel;
@using DoormatCore.Games;
@using KryGamesBot.MAUI.Blazor.Classes;
@using KryGamesBot.MAUI.Blazor.Interfaces;
@implements iLiveBet;

<h3>DiceLiveBetsControl</h3>

<DxGrid CssClass="LiveBetsGrid" Data="Bets" CustomizeElement="Grid_CustomizeElement" PageSize="100" VirtualScrollingEnabled=true>
    <Columns>
        <DxGridDataColumn FieldName="BetID" />
        <DxGridDataColumn FieldName="DateValue" DisplayFormat="yyyy/MM/dd HH:mm:ss.ff" SortIndex=0 SortOrder="GridColumnSortOrder.Descending" SortMode="GridColumnSortMode.Value" />
        <DxGridDataColumn FieldName="TotalAmount" DisplayFormat="n8" />
        <DxGridDataColumn FieldName="High" />
        <DxGridDataColumn FieldName="Chance" DisplayFormat="n4" />
        <DxGridDataColumn FieldName="Roll" DisplayFormat="n4" />
        <DxGridDataColumn FieldName="Profit" DisplayFormat="n8"/>
        <DxGridDataColumn FieldName="Nonce"  />

        
    </Columns>
</DxGrid>

@code {
    ObservableCollection<DiceBet> Bets;
    protected override void OnInitialized()
    {
        Bets = new ObservableCollection<DiceBet>();

    }
    [Parameter]    
    public EventCallback<ViewBetEventArgs> OnSiteSelected { get; set; }

    [Parameter]
    public EventCallback<ViewBetEventArgs> BetClicked { get; set; }

    public void AddBet(Bet newBet)
    {  
        //if (Bets.CanRemove)
        while (Bets.Count > UISettings.Settings.LiveBets + 1)
        {

            //System.Threading.Thread.Sleep(10);
            //Bets.Remove(Bets.list);
            Bets.RemoveAt(Bets.Count - 1);
        }
        Bets.Add(newBet as DiceBet);

    }

    void Grid_CustomizeElement(GridCustomizeElementEventArgs e)
    {
        if (e.ElementType == GridElementType.DataRow)
        {
            var bet = (DiceBet)e.Grid.GetDataItem(e.VisibleIndex);
            e.Style = bet.IsWin ? "color: rgb(40, 167, 69)" : "color: rgb(220, 53, 69)";
        }
        else if (e.ElementType == GridElementType.DataCell)
        {
            var bet = (DiceBet)e.Grid.GetDataItem(e.VisibleIndex);

            var fieldName = ((IGridDataColumn)e.Column).FieldName;
            if (fieldName=="Roll")
            {
                switch (bet.WinnableType)
                {   
                    case 1: e.Style = "color: "+ Colors.DarkOrange.ToArgbHex(); break;
                    case 2: e.Style = "color: " + Colors.DimGray.ToArgbHex(); break;
                    case 3: e.Style = "color: " + Colors.Green.ToArgbHex(); break;
                    case 4: e.Style = "color: " + Colors.Brown.ToArgbHex(); break;
                }
            }
        }
    }
    
}
