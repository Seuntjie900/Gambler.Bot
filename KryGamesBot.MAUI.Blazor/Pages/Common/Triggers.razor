@using DoormatBot.Helpers;
<h3>Triggers</h3>
<DxGrid Data="BetSettings.Triggers"
        EditMode="GridEditMode.PopupEditForm"
        EditorRenderMode="GridEditorRenderMode.Integrated"
        EditNewRowPosition="GridEditNewRowPosition.Bottom"
        AllowSort=false
        PageSize="30"
        VirtualScrollingEnabled=true
        EditModelSaving="Grid_EditModelSaving"
        DataItemDeleting="Grid_DataItemDeleting" 

>
    <Columns>
        <DxGridCommandColumn Width="160px" />
        <DxGridDataColumn FieldName="Enabled" />
        <DxGridDataColumn FieldName="TriggerDescription" />
        
    </Columns>

    <EditFormTemplate Context="EditFormContext">
        <EditTrigger SelectedTrigger="@(EditFormContext.EditModel as DoormatCore.Helpers.Trigger)" Notifications=false />
    </EditFormTemplate>
</DxGrid>
@code {
    [Parameter]
    public InternalBetSettings BetSettings { get; set; }
    

    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        if (e.IsNew)
            BetSettings.Triggers.Add((e.EditModel as DoormatCore.Helpers.Trigger));
        else
        {
            var oldTrigger = e.DataItem as DoormatCore.Helpers.Trigger;
            var newTrigger = e.EditModel as DoormatCore.Helpers.Trigger;
            
        }
    }
    async Task Grid_DataItemDeleting(GridDataItemDeletingEventArgs e)
    {
        BetSettings.Triggers.Remove(e.DataItem as DoormatCore.Helpers.Trigger);
    }
}
