<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="450"
             x:Class="Gambler.Bot.Views.Common.TriggersView"
             xmlns:vm="using:Gambler.Bot.ViewModels.Common"
             x:DataType="vm:TriggersViewModel"
             xmlns:classes="using:Gambler.Bot.Classes"

             xmlns:img="https://github.com/projektanker/icons.avalonia"
             >
    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button HorizontalAlignment="Right" Command="{Binding RemoveCommand}">
                <StackPanel Orientation="Horizontal">
                    <img:Icon Classes="btnIcon" Value="mdi-delete" />
                    <TextBlock Text="{DynamicResource Localization.Common.Triggers.Remove}"/>
                </StackPanel>
            </Button>
            <Button HorizontalAlignment="Right" Command="{Binding AddCommand}">
                <StackPanel Orientation="Horizontal">
                    <img:Icon Classes="btnIcon" Value="mdi-plus" />
                    <TextBlock Text="{DynamicResource Localization.Common.Triggers.Add}"/>
                </StackPanel>
            </Button>
        </StackPanel>
        <DataGrid MinHeight="150" MaxHeight="400" ItemsSource="{Binding Triggers}" SelectedItem="{Binding SelectedTrigger}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="{DynamicResource Localization.Common.Triggers.Enabled}" Binding="{Binding Enabled}" />
                <DataGridTextColumn Header="{DynamicResource Localization.Common.Triggers.Description}" Binding="{Binding TriggerDescription}" Width="*" />
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel>
            <ToggleSwitch Classes="theme-solid accent" Content="{DynamicResource Localization.Common.Triggers.Enabled}" IsChecked="{Binding SelectedTrigger.Enabled }" HorizontalAlignment="Left" />
            <WrapPanel Orientation="Horizontal" IsVisible="{Binding ShowEditor}">


                <TextBlock Margin="3 0 5 0" VerticalAlignment="Center"  Text="{DynamicResource Localization.Common.Triggers.When}" HorizontalAlignment="Left"/>
                <ComboBox HorizontalAlignment="Left" MinWidth="150" MaxWidth="250" ItemsSource="{Binding Properties}" SelectedValue="{Binding SelectedTrigger.TriggerProperty}" />
                <TextBlock Margin="5 0 5 0" VerticalAlignment="Center" Text="{DynamicResource Localization.Common.Triggers.Is}"/>
                <ComboBox MinWidth="150" MaxWidth="250" ItemsSource="{Binding Comparisons}" SelectedValue="{Binding SelectedTrigger.Comparison}" />

                <ComboBox MinWidth="150" MaxWidth="250" ItemsSource="{Binding Againsts}" SelectedValue="{Binding SelectedTrigger.TargetType}"/>

                <!--If tartget type is value-->
                <NumericUpDown FormatString="n8" MinWidth="100" MaxWidth="150" Value="{Binding Target}" IsVisible="{Binding ShowTValue}" />
                <!--If tartget type is percentage-->
                <StackPanel Orientation="Horizontal"  IsVisible="{Binding ShowTPercentage}">
                    <NumericUpDown MinWidth="100" MaxWidth="150" FormatString="n5" Value="{Binding SelectedTrigger.Percentage}"></NumericUpDown>
                    <TextBlock Margin="5 0 5 0" VerticalAlignment="Center"  Text="{DynamicResource Localization.Common.Triggers.PercOf}"/>
                    <ComboBox MinWidth="150" MaxWidth="250" SelectedItem="{Binding SelectedTrigger.Target}"  ItemsSource="{Binding Properties}"/>

                </StackPanel>
                <!--If tartget type is property-->
                <ComboBox SelectedItem="{Binding SelectedTrigger.Target}"  IsVisible="{Binding ShowTPrperty}" ItemsSource="{Binding Properties}"></ComboBox>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="5 0 5 0" VerticalAlignment="Center"  Text="{DynamicResource Localization.Common.Triggers.Then}">

                    </TextBlock>
                    <ComboBox MinWidth="150" MaxWidth="250" SelectedItem="{Binding SelectedTrigger.Action}" ItemsSource="{Binding Actions}"/>
                </StackPanel>
                <!-- if Action is amount action -->


                <TextBlock IsVisible="{Binding ShowAmount}" Margin="5 0 5 0" Text="{DynamicResource Localization.Common.Triggers.Amount}"/>
                <ComboBox  IsVisible="{Binding ShowAmount}" MinWidth="150" MaxWidth="250" ItemsSource="{Binding Againsts}" SelectedItem="{Binding SelectedTrigger.ValueType }" />
                <!-- if targettype = value-->
                <NumericUpDown MinWidth="100" MaxWidth="150" FormatString="n8"  Value="{Binding SelectedTrigger.ValueValue}" IsVisible="{Binding ShowVValue}" />
                <!-- if targettype = percentage-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" IsVisible="{Binding ShowVPercentage}">
                    <NumericUpDown MinWidth="100" MaxWidth="150" FormatString="n5" Value="{Binding SelectedTrigger.ValueValue}" />
                    <TextBlock Margin="5 0 5 0" VerticalAlignment="Center" Text="{DynamicResource Localization.Common.Triggers.PercOf}"></TextBlock>
                    <ComboBox MinWidth="150" MaxWidth="250" SelectedItem="{Binding SelectedTrigger.ValueProperty}" ItemsSource="{Binding Properties}"/>
                </StackPanel>
                <!-- if targettype = property-->
                <ComboBox MinWidth="150" MaxWidth="250" SelectedItem="{Binding SelectedTrigger.ValueProperty}" IsVisible="{Binding ShowVPrperty}" ItemsSource="{Binding Properties}"/>

                <!-- if action is destination action-->
                <StackPanel Orientation="Horizontal" IsVisible="{Binding ShowDestination}">
                    <TextBlock Margin="5 0 5 0" Text="{DynamicResource Localization.Common.Triggers.To}"></TextBlock>
                    <TextBox MinWidth="150" MaxWidth="300" Text="{Binding SelectedTrigger.Destination}"></TextBox>
                </StackPanel>
            </WrapPanel>
        </StackPanel>
    </StackPanel>

</UserControl>
